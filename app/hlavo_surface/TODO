- logging: lag all warning and errors into the dataset or common Zarr log array.
  log cols: date_time, level, messge
  log info for each update operation, optionaly keep all update tables unmerged as well
  or one can have have some more refined policy for merging tree of datasets (yes this could be use case for xarray dataset tree)


Notebook:
2. prompt for node path in th sourece 
3. load DF from the node, use 

Shortcommings:
- read actual yr.no forcast for locations ->df
  do not use cache in production,
- use scrapper function according to node ATTR

- zarr_storage creation create uncomplete under temp name,
  rename after completion
- check the structure match schema
- Implement special keys by general resolution mechanism,
  after YAML parsing. Use that mechanism to implement ATTRS, COORDS, VARD, FN, REF
  Choose better names, possibly custom tag.
  Have derived 'dict' implementation, possibly taken from bgem.
  Idea is to have possibility to call Python or Visip functions,
  assume pure functions, no state.
  Then we can have realtively general update machanism configured through the file.
  So the schema also describes the update step.
- ZARR complains:
  /home/jb/workspace/zarr_fuse/zarr_fuse/zarr_storage.py:367: RuntimeWarning: Failed to open Zarr store with consolidated metadata, but successfully read with non-consolidated metadata. This is typically much slower for opening a dataset. To silence this warning, consider:
1. Consolidating metadata in this existing store with zarr.consolidate_metadata().
2. Explicitly setting consolidated=False, to avoid trying to read consolidate metadata, or
3. Explicitly setting consolidated=True, to raise an error in this case instead of falling back to try reading non-consolidated metadata.
  return xr.open_zarr(self.store, group=rel_path)
/home/jb/workspace/zarr_fuse/zarr_fuse/zarr_storage.py:367: RuntimeWarning: Failed to open Zarr store with consolidated metadata, but successfully read with non-consolidated metadata. This is typically much slower for opening a dataset. To silence this warning, consider:
1. Consolidating metadata in this existing store with zarr.consolidate_metadata().
2. Explicitly setting consolidated=False, to avoid trying to read consolidate metadata, or
3. Explicitly setting consolidated=True, to raise an error in this case instead of falling back to try reading non-consolidated metadata.
  return xr.open_zarr(self.store, group=rel_path)