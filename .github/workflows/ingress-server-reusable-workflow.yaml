name: Ingress server - reusable workflow
on:
  workflow_call:
    inputs:
      push-container:
        description: Whether to push the container image
        required: false
        type: boolean
        default: false
      deploy-helm-chart:
        description: Whether to deploy the Helm chart
        required: false
        type: boolean
        default: false
      tag:
        description: The tag to use for the container image
        required: false
        type: string
        default: generate
      namespace:
        description: The Kubernetes namespace to use
        required: true
        type: string
      release-name:
        description: The Helm release name to use
        required: true
        type: string
      s3-store-url:
        description: The S3 store URL (e.g., s3://bucket-name/path/to/store.zarr)
        required: true
        type: string
      docker-repository:
        description: The Docker repository to use
        required: false
        type: string
        default: jbrezmorf/zarr-fuse-ingress-server
      docker-registry:
        description: The Docker registry to use
        required: false
        type: string
        default: docker.io
jobs:
  get-version-tag:
    name: Get version tag
    runs-on: ubuntu-latest
    outputs:
      version-tag: ${{ steps.get_version_tag.outputs.version_tag }}
    concurrency:
      group: ${{ github.head_ref }}-${{ github.ref_name }}-get-version-tag
      cancel-in-progress: true
    steps:
      - name: Get version tag
        id: get_version_tag
        run: |
          if [[ ${{ inputs.tag }} == "generate" ]]; then
            echo "version_tag=ci-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          else
            echo "version_tag=${{ inputs.tag }}" >> $GITHUB_OUTPUT
          fi
  containerize:
    name: Containerize ingress server
    runs-on: ubuntu-latest
    container:
      image: quay.io/buildah/stable:v1.35.4
      options: --privileged
    needs:
      - get-version-tag
    defaults:
      run:
        working-directory: app/databuk/ingress_server
    concurrency:
      group: "${{ github.workflow }}-${{ github.ref }}-containerize"
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: GeoMop/zarr_fuse
      - name: Login to registry
        if: ${{ inputs.push-container }}
        run: buildah login -u ${{ vars.DOCKER_USERNAME }} -p "${{ secrets.DOCKER_PASSWORD }}" ${{ inputs.docker-registry }}
      - name: Build container file
        run: |
          buildah build -t ${{ inputs.docker-registry }}/${{ inputs.docker-repository }}:${{ needs.get-version-tag.outputs.version-tag }} \
          --build-arg APP_VERSION="${{ needs.get-version-tag.outputs.version-tag }}" \
          -f oci/Containerfile .
      - name: Push container image
        if: ${{ inputs.push-container }}
        run: |
          buildah push ${{ inputs.docker-registry }}/${{ inputs.docker-repository }}:${{ needs.get-version-tag.outputs.version-tag }} docker://${{ inputs.docker-registry }}/${{ inputs.docker-repository }}:${{ needs.get-version-tag.outputs.version-tag }}
          buildah logout ${{ inputs.docker-registry }}
  lint-helm-chart:
    name: Lint ingress server Helm chart
    runs-on: ubuntu-latest
    container:
      image: alpine/k8s:1.29.14
    needs:
      - containerize
    defaults:
      run:
        working-directory: app/databuk/ingress_server/charts/ingress-server
    concurrency:
      group: "${{ github.workflow }}-${{ github.ref }}-lint-helm-chart"
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: GeoMop/zarr_fuse
      - name: Lint helm chart
        run: helm lint --values values/minimal-required-values.yaml --strict > /dev/null
      - name: Template helm chart
        run: helm template ingress-server . --values values/minimal-required-values.yaml > /dev/null
  deploy-helm-chart:
    name: Deploy ingress server to e-infra rancher
    runs-on: ubuntu-latest
    if: ${{ inputs.deploy-helm-chart }}
    container:
      image: alpine/k8s:1.29.14
    needs:
      - lint-helm-chart
      - get-version-tag
    env:
      KUBECONFIG: ./kubeconfig.yaml
    defaults:
      run:
        working-directory: app/databuk/ingress_server/charts
    concurrency:
      group: "${{ github.workflow }}-${{ github.ref }}-deploy-helm-chart"
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: GeoMop/zarr_fuse
      - name: Decode kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig.yaml && chmod 600 kubeconfig.yaml
      - name: Ensure that the namespace exists
        run: kubectl create namespace --dry-run=client -o yaml "${{ inputs.namespace }}"
      - name: Set context
        run: kubectl config set-context --current --namespace="${{ inputs.namespace }}"
      - name: Deploy app
        run: |
          helm upgrade ${{ inputs.release-name }} ingress-server \
          --install --atomic --timeout 10m --namespace "${{ inputs.namespace }}" \
          --set image.tag="${{ needs.get-version-tag.outputs.version-tag }}" \
          --set deployment.secrets.s3.accessKey="${{ secrets.S3_ACCESS_KEY }}" \
          --set deployment.secrets.s3.secretKey="${{ secrets.S3_SECRET_KEY }}" \
          --set deployment.secrets.s3.endpointUrl="${{ vars.S3_ENDPOINT_URL }}" \
          --set deployment.secrets.s3.storeUrl='${{ inputs.s3-store-url }}' \
          --set-json deployment.secrets.basicAuth.usersJson='${{ secrets.BASIC_AUTH_USERS_JSON }}' \
          --set app.name="${{ inputs.release-name }}"
