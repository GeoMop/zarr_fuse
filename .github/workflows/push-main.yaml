name: Push main - conteinerize app and deploy to e-infra rancher
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  namespace: jupyter-test
  repository: mocstepan/voila-app
  registry: docker.io
jobs:
  containerize:
    name: Containerize app
    runs-on: ubuntu-latest
    container:
      image: quay.io/buildah/stable:v1.35.4
      options: --privileged
    outputs:
      image-tag: ${{ steps.tag.outputs.image-tag }}
    defaults:
      run:
        working-directory: app/jupyter_test
    concurrency:
      group: "${{ github.workflow }}-${{ github.ref }}-containerize"
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create tag
        id: tag
        run: echo "image-tag=$(date +%Y.%m.%d)" >> $GITHUB_OUTPUT
      - name: Move dependencies file
        run: mv ../../pyproject.toml ./
      - name: Containerize app
        run: |
          buildah login -u ${{ vars.DOCKER_USERNAME }} -p "${{ secrets.DOCKER_PASSWORD }}" ${{ env.registry }}
          buildah build -t ${{ env.registry }}/${{ env.repository }}:${{ steps.tag.outputs.image-tag }} -f docker/Dockerfile .
          buildah push ${{ env.registry }}/${{ env.repository }}:${{ steps.tag.outputs.image-tag }} docker://${{ env.registry }}/${{ env.repository}}:${{ steps.tag.outputs.image-tag }}
          buildah logout ${{ env.registry }}
  deploy:
    name: Deploy app to e-infra rancher
    runs-on: ubuntu-latest
    container:
      image: alpine/k8s:1.29.14
    needs:
      - containerize
    env:
      KUBECONFIG: ./kubeconfig.yaml
    defaults:
      run:
        working-directory: charts
    concurrency:
      group: "${{ github.workflow }}-${{ github.ref }}-deploy"
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Decode kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig.yaml && chmod 600 kubeconfig.yaml
      - name: Ensure that the namespace exists
        run: kubectl create namespace --dry-run=client -o yaml '${{ env.namespace }}' | kubectl apply -f -
      - name: Set context
        run: kubectl config set-context --current --namespace="${{ env.namespace }}"
      - name: Deploy app
        run: |
          helm upgrade jupyter-test jupyter-test \
          --install --atomic --namespace "${{ env.namespace }}" \
          --set image.registry="${{ env.registry }}" \
          --set image.repository="${{ env.repository }}" \
          --set image.tag="${{ needs.containerize.outputs.image-tag }}"
